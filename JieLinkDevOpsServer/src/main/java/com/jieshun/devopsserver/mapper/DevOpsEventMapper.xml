<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jieshun.devopsserver.mapper.DevOpsEventMapper" >
  <resultMap id="BaseResultMap" type="com.jieshun.devopsserver.bean.DevOpsEvent" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="event_type" property="eventType" jdbcType="INTEGER" />
    <result column="project_no" property="projectNo" jdbcType="VARCHAR" />
    <result column="project_version" property="projectVersion" jdbcType="VARCHAR" />
    <result column="project_name" property="projectName" jdbcType="VARCHAR" />
    <result column="remote_account" property="remoteAccount" jdbcType="VARCHAR" />
    <result column="remote_password" property="remotePassword" jdbcType="VARCHAR" />
    <result column="contact_name" property="contactName" jdbcType="VARCHAR" />
    <result column="contact_phone" property="contactPhone" jdbcType="VARCHAR" />
    <result column="operator_date" property="operatorDate" jdbcType="TIMESTAMP" />
    <result column="is_processed" property="isProcessed" jdbcType="INTEGER" />
    <result column="is_filter" property="isFilter" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, event_type, project_no, project_version, project_name, remote_account, remote_password, 
    contact_name, contact_phone, operator_date, is_processed, is_filter
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jieshun.devopsserver.bean.DevOpsEventExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from devops_event
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from devops_event
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from devops_event
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jieshun.devopsserver.bean.DevOpsEventExample" >
    delete from devops_event
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jieshun.devopsserver.bean.DevOpsEvent" >
    insert into devops_event (id, event_type, project_no, 
      project_version, project_name, remote_account, 
      remote_password, contact_name, contact_phone, 
      operator_date, is_processed, is_filter
      )
    values (#{id,jdbcType=INTEGER}, #{eventType,jdbcType=INTEGER}, #{projectNo,jdbcType=VARCHAR}, 
      #{projectVersion,jdbcType=VARCHAR}, #{projectName,jdbcType=VARCHAR}, #{remoteAccount,jdbcType=VARCHAR}, 
      #{remotePassword,jdbcType=VARCHAR}, #{contactName,jdbcType=VARCHAR}, #{contactPhone,jdbcType=VARCHAR}, 
      #{operatorDate,jdbcType=TIMESTAMP}, #{isProcessed,jdbcType=INTEGER}, #{isFilter,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jieshun.devopsserver.bean.DevOpsEvent" >
    insert into devops_event
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="eventType != null" >
        event_type,
      </if>
      <if test="projectNo != null" >
        project_no,
      </if>
      <if test="projectVersion != null" >
        project_version,
      </if>
      <if test="projectName != null" >
        project_name,
      </if>
      <if test="remoteAccount != null" >
        remote_account,
      </if>
      <if test="remotePassword != null" >
        remote_password,
      </if>
      <if test="contactName != null" >
        contact_name,
      </if>
      <if test="contactPhone != null" >
        contact_phone,
      </if>
      <if test="operatorDate != null" >
        operator_date,
      </if>
      <if test="isProcessed != null" >
        is_processed,
      </if>
      <if test="isFilter != null" >
        is_filter,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="eventType != null" >
        #{eventType,jdbcType=INTEGER},
      </if>
      <if test="projectNo != null" >
        #{projectNo,jdbcType=VARCHAR},
      </if>
      <if test="projectVersion != null" >
        #{projectVersion,jdbcType=VARCHAR},
      </if>
      <if test="projectName != null" >
        #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="remoteAccount != null" >
        #{remoteAccount,jdbcType=VARCHAR},
      </if>
      <if test="remotePassword != null" >
        #{remotePassword,jdbcType=VARCHAR},
      </if>
      <if test="contactName != null" >
        #{contactName,jdbcType=VARCHAR},
      </if>
      <if test="contactPhone != null" >
        #{contactPhone,jdbcType=VARCHAR},
      </if>
      <if test="operatorDate != null" >
        #{operatorDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isProcessed != null" >
        #{isProcessed,jdbcType=INTEGER},
      </if>
      <if test="isFilter != null" >
        #{isFilter,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jieshun.devopsserver.bean.DevOpsEventExample" resultType="java.lang.Integer" >
    select count(*) from devops_event
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update devops_event
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.eventType != null" >
        event_type = #{record.eventType,jdbcType=INTEGER},
      </if>
      <if test="record.projectNo != null" >
        project_no = #{record.projectNo,jdbcType=VARCHAR},
      </if>
      <if test="record.projectVersion != null" >
        project_version = #{record.projectVersion,jdbcType=VARCHAR},
      </if>
      <if test="record.projectName != null" >
        project_name = #{record.projectName,jdbcType=VARCHAR},
      </if>
      <if test="record.remoteAccount != null" >
        remote_account = #{record.remoteAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.remotePassword != null" >
        remote_password = #{record.remotePassword,jdbcType=VARCHAR},
      </if>
      <if test="record.contactName != null" >
        contact_name = #{record.contactName,jdbcType=VARCHAR},
      </if>
      <if test="record.contactPhone != null" >
        contact_phone = #{record.contactPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.operatorDate != null" >
        operator_date = #{record.operatorDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isProcessed != null" >
        is_processed = #{record.isProcessed,jdbcType=INTEGER},
      </if>
      <if test="record.isFilter != null" >
        is_filter = #{record.isFilter,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update devops_event
    set id = #{record.id,jdbcType=INTEGER},
      event_type = #{record.eventType,jdbcType=INTEGER},
      project_no = #{record.projectNo,jdbcType=VARCHAR},
      project_version = #{record.projectVersion,jdbcType=VARCHAR},
      project_name = #{record.projectName,jdbcType=VARCHAR},
      remote_account = #{record.remoteAccount,jdbcType=VARCHAR},
      remote_password = #{record.remotePassword,jdbcType=VARCHAR},
      contact_name = #{record.contactName,jdbcType=VARCHAR},
      contact_phone = #{record.contactPhone,jdbcType=VARCHAR},
      operator_date = #{record.operatorDate,jdbcType=TIMESTAMP},
      is_processed = #{record.isProcessed,jdbcType=INTEGER},
      is_filter = #{record.isFilter,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jieshun.devopsserver.bean.DevOpsEvent" >
    update devops_event
    <set >
      <if test="eventType != null" >
        event_type = #{eventType,jdbcType=INTEGER},
      </if>
      <if test="projectNo != null" >
        project_no = #{projectNo,jdbcType=VARCHAR},
      </if>
      <if test="projectVersion != null" >
        project_version = #{projectVersion,jdbcType=VARCHAR},
      </if>
      <if test="projectName != null" >
        project_name = #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="remoteAccount != null" >
        remote_account = #{remoteAccount,jdbcType=VARCHAR},
      </if>
      <if test="remotePassword != null" >
        remote_password = #{remotePassword,jdbcType=VARCHAR},
      </if>
      <if test="contactName != null" >
        contact_name = #{contactName,jdbcType=VARCHAR},
      </if>
      <if test="contactPhone != null" >
        contact_phone = #{contactPhone,jdbcType=VARCHAR},
      </if>
      <if test="operatorDate != null" >
        operator_date = #{operatorDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isProcessed != null" >
        is_processed = #{isProcessed,jdbcType=INTEGER},
      </if>
      <if test="isFilter != null" >
        is_filter = #{isFilter,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jieshun.devopsserver.bean.DevOpsEvent" >
    update devops_event
    set event_type = #{eventType,jdbcType=INTEGER},
      project_no = #{projectNo,jdbcType=VARCHAR},
      project_version = #{projectVersion,jdbcType=VARCHAR},
      project_name = #{projectName,jdbcType=VARCHAR},
      remote_account = #{remoteAccount,jdbcType=VARCHAR},
      remote_password = #{remotePassword,jdbcType=VARCHAR},
      contact_name = #{contactName,jdbcType=VARCHAR},
      contact_phone = #{contactPhone,jdbcType=VARCHAR},
      operator_date = #{operatorDate,jdbcType=TIMESTAMP},
      is_processed = #{isProcessed,jdbcType=INTEGER},
      is_filter = #{isFilter,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>